#code by hoàng anh đẹp trai, xóa làm chó
import requests
import json
import requests,os,time,re,json,uuid,random,sys
from time import sleep
import os

# Định nghĩa các mã màu
trang = "\033[1;37m\033[1m"
xanh_la = "\033[1;32m\033[1m"
xanh_duong = "\033[1;34m\033[1m"
xanhnhat = '\033[1m\033[38;5;51m'
do = "\033[1;31m\033[1m\033[1m"
xam='\033[1;30m\033[1m'
vang = "\033[1;33m\033[1m"
tim = "\033[1;35m\033[1m"
hongnhat = "#FFC0CB"
kt_code = "</>"
dac_biet = "\033[32;5;245m\033[1m\033[38;5;39m"



#=================================tac vu=========================================================

def idelay(o):
    while(o>0):
        o=o-1
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;33mV\033[1;34mu\033[1;35mi \033[1;32mL\033[1;33mò\033[1;34mn\033[1;35mg \033[1;36mC\033[1;33mh\033[1;34mờ {trang}[\033[1;35m.....""]""["+str(o)+"]""    ",end='\r')
        time.sleep(1/6)
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;31mV\033[1;32mu\033[1;33mi \033[1;34mL\033[1;35mò\033[1;31mn\033[1;32mg \033[1;33mC\033[1;32mh\033[1;35mờ {trang}[\033[1;33m•{trang}....""]"f"{trang}[{xanhnhat}"+str(o)+f"{trang}]""     ",end='\r')
        time.sleep(1/6)
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;32mV\033[1;33mu\033[1;34mi \033[1;35mL\033[1;36mò\033[1;33mn\033[1;34mg \033[1;35mC\033[1;31mh\033[1;32mờ {trang}[\033[1;35m••{trang}...""]"f"{trang}[{xanh_la}"+str(o)+f"{trang}]""     ",end='\r')
        time.sleep(1/6)
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;31mV\033[1;33mu\033[1;35mi \033[1;33mL\033[1;31mò\033[1;32mn\033[1;34mg \033[1;36mC\033[1;35mh\033[1;31mờ {trang}[\033[1;32m•••{trang}..""]"f"{trang}[{do}"+str(o)+f"{trang}]""     ",end='\r')
        time.sleep(1/6)
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;32mV\033[1;34mu\033[1;36mi \033[1;32mL\033[1;34mò\033[1;31mn\033[1;35mg \033[1;33mC\033[1;36mh\033[1;35mờ {trang}[\033[1;38m••••{trang}.""]"f"{trang}[{tim}"+str(o)+f"{trang}]""     ",end='\r')
        time.sleep(1/6)
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;31mV\033[1;34mu\033[1;36mi \033[1;32mL\033[1;34mò\033[1;32mn\033[1;35mg \033[1;36mC\033[1;34mh\033[1;32mờ {trang}[\033[1;33m•••••{trang}""]"f"{trang}[{vang}"+str(o)+f"{trang}]""     ",end='\r')
        time.sleep(0.1)
        print(f"{trang}[{xanhnhat}Tấn Việt{trang}] \033[1;31mV\033[1;34mu\033[1;36mi \033[1;32mL\033[1;34mò\033[1;32mn\033[1;35mg \033[1;36mC\033[1;34mh\033[1;32mờ {trang}[\033[1;33m•••••{trang}""]"f"{trang}[{xanh_la}"+str(o)+f"{trang}]""     ",end='\r')

def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

def runbanner(text, delay=0.0000000000000000000000000000000000000000000000000000000000001):
    for char in text:
        print(char, end='', flush=True)
        time.sleep(delay)
    print()
banner = """
\033[38;2;81;15;138m█\033[38;2;80;17;139m█\033[38;2;79;19;140m█\033[38;2;78;21;141m█\033[38;2;77;23;142m█\033[38;2;76;25;143m█\033[38;2;75;27;144m█\033[38;2;74;29;145m█\033[38;2;73;31;146m╗\033[38;2;72;33;147m \033[38;2;71;35;148m█\033[38;2;70;37;149m█\033[38;2;69;39;150m█\033[38;2;68;41;151m█\033[38;2;67;43;152m█\033[38;2;66;45;153m╗\033[38;2;65;47;154m \033[38;2;64;49;155m█\033[38;2;63;51;156m█\033[38;2;62;53;157m█\033[38;2;61;55;158m╗\033[38;2;60;57;159m \033[38;2;59;59;160m \033[38;2;58;61;161m \033[38;2;57;63;162m█\033[38;2;56;65;163m█\033[38;2;55;67;164m╗\033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m█\033[38;2;49;79;170m█\033[38;2;48;81;171m╗\033[38;2;47;83;172m \033[38;2;46;85;173m \033[38;2;45;87;174m \033[38;2;44;89;175m█\033[38;2;43;91;176m█\033[38;2;42;93;177m╗\033[38;2;41;95;178m█\033[38;2;40;97;179m█\033[38;2;39;99;180m╗\033[38;2;38;101;181m█\033[38;2;37;103;182m█\033[38;2;36;105;183m█\033[38;2;35;107;184m█\033[38;2;34;109;185m█\033[38;2;33;111;186m█\033[38;2;32;113;187m█\033[38;2;31;115;188m╗\033[38;2;30;117;189m█\033[38;2;29;119;190m█\033[38;2;28;121;191m█\033[38;2;27;123;192m█\033[38;2;26;125;193m█\033[38;2;25;127;194m█\033[38;2;24;129;195m█\033[38;2;23;131;196m█\033[38;2;22;133;197m╗
\033[38;2;81;15;138m╚\033[38;2;80;17;139m═\033[38;2;79;19;140m═\033[38;2;78;21;141m█\033[38;2;77;23;142m█\033[38;2;76;25;143m╔\033[38;2;75;27;144m═\033[38;2;74;29;145m═\033[38;2;73;31;146m╝\033[38;2;72;33;147m█\033[38;2;71;35;148m█\033[38;2;70;37;149m╔\033[38;2;69;39;150m═\033[38;2;68;41;151m═\033[38;2;67;43;152m█\033[38;2;66;45;153m█\033[38;2;65;47;154m╗\033[38;2;64;49;155m█\033[38;2;63;51;156m█\033[38;2;62;53;157m█\033[38;2;61;55;158m█\033[38;2;60;57;159m╗\033[38;2;59;59;160m \033[38;2;58;61;161m \033[38;2;57;63;162m█\033[38;2;56;65;163m█\033[38;2;55;67;164m║\033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m█\033[38;2;49;79;170m█\033[38;2;48;81;171m║\033[38;2;47;83;172m \033[38;2;46;85;173m \033[38;2;45;87;174m \033[38;2;44;89;175m█\033[38;2;43;91;176m█\033[38;2;42;93;177m║\033[38;2;41;95;178m█\033[38;2;40;97;179m█\033[38;2;39;99;180m║\033[38;2;38;101;181m█\033[38;2;37;103;182m█\033[38;2;36;105;183m╔\033[38;2;35;107;184m═\033[38;2;34;109;185m═\033[38;2;33;111;186m═\033[38;2;32;113;187m═\033[38;2;31;115;188m╝\033[38;2;30;117;189m╚\033[38;2;29;119;190m═\033[38;2;28;121;191m═\033[38;2;27;123;192m█\033[38;2;26;125;193m█\033[38;2;25;127;194m╔\033[38;2;24;129;195m═\033[38;2;23;131;196m═\033[38;2;22;133;197m╝
\033[38;2;81;15;138m \033[38;2;80;17;139m \033[38;2;79;19;140m \033[38;2;78;21;141m█\033[38;2;77;23;142m█\033[38;2;76;25;143m║\033[38;2;75;27;144m \033[38;2;74;29;145m \033[38;2;73;31;146m \033[38;2;72;33;147m█\033[38;2;71;35;148m█\033[38;2;70;37;149m█\033[38;2;69;39;150m█\033[38;2;68;41;151m█\033[38;2;67;43;152m█\033[38;2;66;45;153m█\033[38;2;65;47;154m║\033[38;2;64;49;155m█\033[38;2;63;51;156m█\033[38;2;62;53;157m╔\033[38;2;61;55;158m█\033[38;2;60;57;159m█\033[38;2;59;59;160m╗\033[38;2;58;61;161m \033[38;2;57;63;162m█\033[38;2;56;65;163m█\033[38;2;55;67;164m║\033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m█\033[38;2;49;79;170m█\033[38;2;48;81;171m║\033[38;2;47;83;172m \033[38;2;46;85;173m \033[38;2;45;87;174m \033[38;2;44;89;175m█\033[38;2;43;91;176m█\033[38;2;42;93;177m║\033[38;2;41;95;178m█\033[38;2;40;97;179m█\033[38;2;39;99;180m║\033[38;2;38;101;181m█\033[38;2;37;103;182m█\033[38;2;36;105;183m█\033[38;2;35;107;184m█\033[38;2;34;109;185m█\033[38;2;33;111;186m╗\033[38;2;32;113;187m \033[38;2;31;115;188m \033[38;2;30;117;189m \033[38;2;29;119;190m \033[38;2;28;121;191m \033[38;2;27;123;192m█\033[38;2;26;125;193m█\033[38;2;25;127;194m║\033[38;2;24;129;195m \033[38;2;23;131;196m \033[38;2;22;133;197m 
\033[38;2;81;15;138m \033[38;2;80;17;139m \033[38;2;79;19;140m \033[38;2;78;21;141m█\033[38;2;77;23;142m█\033[38;2;76;25;143m║\033[38;2;75;27;144m \033[38;2;74;29;145m \033[38;2;73;31;146m \033[38;2;72;33;147m█\033[38;2;71;35;148m█\033[38;2;70;37;149m╔\033[38;2;69;39;150m═\033[38;2;68;41;151m═\033[38;2;67;43;152m█\033[38;2;66;45;153m█\033[38;2;65;47;154m║\033[38;2;64;49;155m█\033[38;2;63;51;156m█\033[38;2;62;53;157m║\033[38;2;61;55;158m╚\033[38;2;60;57;159m█\033[38;2;59;59;160m█\033[38;2;58;61;161m╗\033[38;2;57;63;162m█\033[38;2;56;65;163m█\033[38;2;55;67;164m║\033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m╚\033[38;2;49;79;170m█\033[38;2;48;81;171m█\033[38;2;47;83;172m╗\033[38;2;46;85;173m \033[38;2;45;87;174m█\033[38;2;44;89;175m█\033[38;2;43;91;176m╔\033[38;2;42;93;177m╝\033[38;2;41;95;178m█\033[38;2;40;97;179m█\033[38;2;39;99;180m║\033[38;2;38;101;181m█\033[38;2;37;103;182m█\033[38;2;36;105;183m╔\033[38;2;35;107;184m═\033[38;2;34;109;185m═\033[38;2;33;111;186m╝\033[38;2;32;113;187m \033[38;2;31;115;188m \033[38;2;30;117;189m \033[38;2;29;119;190m \033[38;2;28;121;191m \033[38;2;27;123;192m█\033[38;2;26;125;193m█\033[38;2;25;127;194m║\033[38;2;24;129;195m \033[38;2;23;131;196m \033[38;2;22;133;197m 
\033[38;2;81;15;138m \033[38;2;80;17;139m \033[38;2;79;19;140m \033[38;2;78;21;141m█\033[38;2;77;23;142m█\033[38;2;76;25;143m║\033[38;2;75;27;144m \033[38;2;74;29;145m \033[38;2;73;31;146m \033[38;2;72;33;147m█\033[38;2;71;35;148m█\033[38;2;70;37;149m║\033[38;2;69;39;150m \033[38;2;68;41;151m \033[38;2;67;43;152m█\033[38;2;66;45;153m█\033[38;2;65;47;154m║\033[38;2;64;49;155m█\033[38;2;63;51;156m█\033[38;2;62;53;157m║\033[38;2;61;55;158m \033[38;2;60;57;159m╚\033[38;2;59;59;160m█\033[38;2;58;61;161m█\033[38;2;57;63;162m█\033[38;2;56;65;163m█\033[38;2;55;67;164m║\033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m \033[38;2;49;79;170m╚\033[38;2;48;81;171m█\033[38;2;47;83;172m█\033[38;2;46;85;173m█\033[38;2;45;87;174m█\033[38;2;44;89;175m╔\033[38;2;43;91;176m╝\033[38;2;42;93;177m \033[38;2;41;95;178m█\033[38;2;40;97;179m█\033[38;2;39;99;180m║\033[38;2;38;101;181m█\033[38;2;37;103;182m█\033[38;2;36;105;183m█\033[38;2;35;107;184m█\033[38;2;34;109;185m█\033[38;2;33;111;186m█\033[38;2;32;113;187m█\033[38;2;31;115;188m╗\033[38;2;30;117;189m \033[38;2;29;119;190m \033[38;2;28;121;191m \033[38;2;27;123;192m█\033[38;2;26;125;193m█\033[38;2;25;127;194m║\033[38;2;24;129;195m \033[38;2;23;131;196m \033[38;2;22;133;197m 
\033[38;2;81;15;138m \033[38;2;80;17;139m \033[38;2;79;19;140m \033[38;2;78;21;141m╚\033[38;2;77;23;142m═\033[38;2;76;25;143m╝\033[38;2;75;27;144m \033[38;2;74;29;145m \033[38;2;73;31;146m \033[38;2;72;33;147m╚\033[38;2;71;35;148m═\033[38;2;70;37;149m╝\033[38;2;69;39;150m \033[38;2;68;41;151m \033[38;2;67;43;152m╚\033[38;2;66;45;153m═\033[38;2;65;47;154m╝\033[38;2;64;49;155m╚\033[38;2;63;51;156m═\033[38;2;62;53;157m╝\033[38;2;61;55;158m \033[38;2;60;57;159m \033[38;2;59;59;160m╚\033[38;2;58;61;161m═\033[38;2;57;63;162m═\033[38;2;56;65;163m═\033[38;2;55;67;164m╝\033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m \033[38;2;49;79;170m \033[38;2;48;81;171m╚\033[38;2;47;83;172m═\033[38;2;46;85;173m═\033[38;2;45;87;174m═\033[38;2;44;89;175m╝\033[38;2;43;91;176m \033[38;2;42;93;177m \033[38;2;41;95;178m╚\033[38;2;40;97;179m═\033[38;2;39;99;180m╝\033[38;2;38;101;181m╚\033[38;2;37;103;182m═\033[38;2;36;105;183m═\033[38;2;35;107;184m═\033[38;2;34;109;185m═\033[38;2;33;111;186m═\033[38;2;32;113;187m═\033[38;2;31;115;188m╝\033[38;2;30;117;189m \033[38;2;29;119;190m \033[38;2;28;121;191m \033[38;2;27;123;192m╚\033[38;2;26;125;193m═\033[38;2;25;127;194m╝\033[38;2;24;129;195m \033[38;2;23;131;196m \033[38;2;22;133;197m 
\033[38;2;81;15;138m \033[38;2;80;17;139m \033[38;2;79;19;140m \033[38;2;78;21;141m \033[38;2;77;23;142m \033[38;2;76;25;143m \033[38;2;75;27;144m \033[38;2;74;29;145m \033[38;2;73;31;146m \033[38;2;72;33;147m \033[38;2;71;35;148m \033[38;2;70;37;149m \033[38;2;69;39;150m \033[38;2;68;41;151m \033[38;2;67;43;152m \033[38;2;66;45;153m \033[38;2;65;47;154m \033[38;2;64;49;155m \033[38;2;63;51;156m \033[38;2;62;53;157m \033[38;2;61;55;158m \033[38;2;60;57;159m \033[38;2;59;59;160m \033[38;2;58;61;161m \033[38;2;57;63;162m \033[38;2;56;65;163m \033[38;2;55;67;164m \033[38;2;54;69;165m \033[38;2;53;71;166m \033[38;2;52;73;167m \033[38;2;51;75;168m \033[38;2;50;77;169m \033[38;2;49;79;170m \033[38;2;48;81;171m \033[38;2;47;83;172m \033[38;2;46;85;173m \033[38;2;45;87;174m \033[38;2;44;89;175m \033[38;2;43;91;176m \033[38;2;42;93;177m \033[38;2;41;95;178m \033[38;2;40;97;179m \033[38;2;39;99;180m \033[38;2;38;101;181m \033[38;2;37;103;182m \033[38;2;36;105;183m \033[38;2;35;107;184m \033[38;2;34;109;185m \033[38;2;33;111;186m \033[38;2;32;113;187mc\033[38;2;31;115;188mo\033[38;2;30;117;189md\033[38;2;29;119;190me\033[38;2;28;121;191m \033[38;2;27;123;192mb\033[38;2;26;125;193my\033[38;2;25;127;194m \033[38;2;24;129;195mK\033[38;2;23;131;196ma\033[38;2;22;133;197m-\033[38;2;21;135;198md\033[38;2;20;137;199me\033[38;2;19;139;200mv\033[38;2;18;141;201m \033[38;2;17;143;202m \033[38;2;16;145;203m \033[38;2;15;147;204m \033[38;2;14;149;205m \033[38;2;13;151;206m \033[38;2;12;153;207m \033[38;2;11;155;208m \033[38;2;10;157;209m \033[38;2;9;159;210m \033[38;2;8;161;211m 

"""
clear()
runbanner(banner)
# Nhập cookie và ID nhóm từ người dùng
ck_fb = input(f'{xanhnhat}NHẬP COOKIE{trang}:{vang} ')
id_group = input(f"{xanhnhat}NHẬP ID GROUP{trang}:{vang} ")
noi_dung = input(f"{xanhnhat}NHẬP NỘI DUNG{trang}:{vang} ")
delay = int(input(f"{xanhnhat}NHẬP delay (đặt cao tí để tránh check poin spam){trang}:{vang} "))
list_id = []
#================================================================================================
#=================================GET TOKEN======================================================
def get_facebook_token(cookie):
    hed_gettoken = {
        'authority': 'www.instagram.com',
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
        'cache-control': 'no-cache',
        'cookie': cookie,
        'pragma': 'no-cache',
        'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="102", "Google Chrome";v="102"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'none',
        'sec-fetch-user': '?1',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.115 Safari/537.36',
    }

    token_fb = requests.get('https://www.facebook.com/dialog/oauth?client_id=124024574287414&redirect_uri=https://www.instagram.com/accounts/signup/&&scope=email&response_type=token', headers=hed_gettoken).url.split('#access_token=')[1].split('&data_access_expiration_time')[0]
    return token_fb

def get_token(cookie):
    header = {
        'authority': 'business.facebook.com',
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'accept-language': 'vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5',
        'cache-control': 'max-age=0',
        'cookie': cookie,
        'referer': 'https://www.facebook.com/',
        'sec-ch-ua': '".Not/A)Brand";v="99","Google Chrome";v="103", "Chromium";v="103"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Linux"',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-user': '?1',
        'upgrade-insecure-requests': '1',
    }
    try:
        home_business = requests.get('https://business.facebook.com/content_management', headers=header).text
        token = home_business.split('EAAG')[1].split('","')[0]
        token = f'EAAG{token}'
    except Exception as e:
        print(f"{do}Cookie sai vui lòng lấy lại")
        quit()
    return token

#======================================================================================= 

#================================GET ID=================================================
# Lấy danh sách ID bài đăng từ nhóm
token_fb1 = get_facebook_token(ck_fb)
response = requests.get(f"https://graph.facebook.com/v13.0/{id_group}/feed?access_token={token_fb1}")
data = response.json()

for post in data['data']:
    if 'id' in post:
        iddl = post['id']
        post_number = iddl.split('_')[1]
        list_id.append(post_number)

#---------------------------------------------------------------------------------------

#=====================================CMT===============================================



headersS = {
        'authority': 'graph.facebook.com',
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
        'accept-language': 'vi-VN,vi;q=0.5',
        'cache-control': 'max-age=0',
        'cookie': ck_fb,
        'sec-ch-ua': '"Not A(Brand";v="99", "Brave";v="121", "Chromium";v="121"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'none',
        'sec-fetch-user': '?1',
        'sec-gpc': '1',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36',
    }


#=======================================================================================
# Bắt đầu bình luận
clear()
runbanner(banner)
while True:
    try:
                for id_post in list_id:
                    token = get_token(ck_fb)
                    nd = noi_dung
                    params = {
                            'method': 'post',
                            'access_token': token,
                            'message': nd,
                        }

                    responsess = requests.get(f'https://graph.facebook.com/{id_post}/comments', params=params, headers=headersS)
                    if responsess.status_code == 200:
                        print(f"{tim}{id_post} {do}| {xanhnhat}{noi_dung} {do}| {xanh_la}Success")
                        idelay(delay) 
                    else:
                        print(f"{tim}{id_post} {do}| {xanhnhat}{noi_dung} {do}| {do}False")
                        idelay(delay) 

    except Exception as e:
        print(f"{do}Lỗi!!! \n{e}")
        time.sleep(10)
